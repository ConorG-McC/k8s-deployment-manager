/* Set up CSS3 animations.  Note these won't work in IE8 or lower */
/* Fade in */
@keyframes fade-in { from { opacity: 0; }  to { opacity: 1; } }
@-webkit-keyframes fade-in {  from { opacity: 0; }  to { opacity: 1; } }
.fade-in, body { 
    animation: fade-in .5s;
}
.fade-in.slow {
    animation: fade-in 2s;
}

/* Fade-out. */
@keyframes fade-out { 0% { opacity:1; } 99% { opacity:0; } 100% { opacity:0; display: none; } }
@-webkit-keyframes fade-out { 0% { opacity:1; } 99% { opacity:0; } 100% { opacity:0; display: none; } }
.fade-out {
    animation: fade-out .5s;
    -webkit-animation-fill-mode:forwards;
    animation-fill-mode:forwards;
}

/* Pulsating element.  Useful for giving the appearance of something loading */
@keyframes loadingPulse { 0% { opacity:0.8; } 50% { opacity:0.2; } 100% { opacity:0.8; } }
@-webkit-keyframes loadingPulse { 0% { opacity: 0.8; } 50% { opacity: 0.2; } 100% { opacity: 0.8; } }
.loading-pulse {
    animation: loadingPulse 2s infinite;
}

/* Dropdown animation for accordion sections (experimental) */
@keyframes dropdown { from { top: -2000px; opacity: 0; z-index: 0; }  to { top:0; opacity: 1; z-index: 1; } }
@-webkit-keyframes dropdown { from { top: -2000px; opacity: 0; z-index: 0; }  to { top: 0; opacity: 1; z-index: 1; } }
.drop-down { 
    animation: dropdown .3s ease-out;
}

@keyframes expandDown { from { opacity: 0; height: 0; }  to { opacity: 1; height:100%; } }
@-webkit-keyframes expandDown { from { opacity: 0; height:0; }  to { opacity: 1; height:100%; } }
.expand-down { 
    animation: expandDown .3s ease-out;
}

.transition {
    transition: all .3s ease-in-out;
}

/* New 3-dot wave loader replaces the older pulsating text. */
.btgs-wave-loader-animation {
    width: 100%;
    height: 100%;
    top: 0;
    left: 0;
    position: absolute;
    background-color: rgba(255,255,255,.7);
    z-index: 98;
}


.btgs-wave-loader-animation-inner {
    display: block;
    position: fixed;
    top: 63%;
    left: calc(50% - 60px);
    z-index: 99;
}

/* Inline variant for placing loader within cards/div panels.  Note this will only work if the dimensions of the container are set */
.btgs-wave-loader-animation.inline {
    width: inherit;
    height: inherit;
    top: auto;
    left: auto;
}

.inline .btgs-wave-loader-animation-inner, .inline .wave-loader-text {
    position: absolute;
}

/* Optional loader text */
.wave-loader-text {
    position: fixed;
    top: 60%;
    left: 50%;
    transform: translateX(-49%);
    animation: fade-in .5s;
}


.btgs-wave-loader-animation-inner span {
    transition: all .5s ease;
    background: #5514b4;
    height: 20px;
    width: 20px;
    display: block;
    border-radius: 20px;
    animation: 1.4s infinite wave;
    position: absolute;
    top: 0;
    left: 20px;
    margin: auto;
}

.btgs-wave-loader-animation-inner span:nth-child(1) {
    position: absolute;
    top: 0;
    left: 20px;
    background-color: #5514b4;
}

@media(max-width: 767px) {

    .btgs-wave-loader-animation-inner span {
        height: 16px;
        width: 16px;
        border-radius: 16px;
        animation: 1.4s infinite wavemini;
        animation-delay: 0;
    }

    .btgs-wave-loader-animation-inner span:nth-child(1) {
        left: 16px;
        animation: 1.4s infinite wavemini;
        animation-delay: 0;
    }
}

.btgs-wave-loader-animation-inner span:nth-child(2) {
    animation-delay: 150ms;
    position: absolute;
    top: 0;
    left: 55px;
    background-color: #ff80ff;
}

@media(max-width: 767px) {
    .btgs-wave-loader-animation-inner span:nth-child(2) {
        left: 43px;
        animation: 1.4s 150ms infinite wavemini;
    }
}

.btgs-wave-loader-animation-inner span:nth-child(3) {
    position: absolute;
    top: 0;
    left: 90px;
    animation: 1.4s .3s infinite wavelast;
    background-color: #1ec8e6;
}

@keyframes wave {
    0%, 100%, 50% {
        transform: translate(0,0);
    }

    15% {
        transform: translate(-5px,-30px);
        width: 30px;
        height: 30px;
    }

    30% {
        transform: translate(0,0);
        height: 20px;
        width: 20px;
    }

    40% {
        transform: translate(0,-5px);
    }
}

@keyframes wavelast {
    0%, 100% {
        transform: translate(0,0);
    }

    15% {
        transform: translate(0,-30px);
        width: 20px;
        height: 20px;
    }

    25% {
        transform: translate(-5px,-10px);
        height: 30px;
        width: 30px;
    }

    30% {
        transform: translate(-2.5px,0);
    }

    40% {
        transform: translate(0,-5px);
        width: 20px;
        height: 20px;
    }

    50% {
        transform: translate(0,0);
        width: 20px;
        height: 20px;
    }
}

@keyframes wavemini {
    0%, 100%, 50% {
        transform: translate(0,0);
    }

    15% {
        transform: translate(-3px,-18px);
        width: 22px;
        height: 22px;
    }

    30% {
        transform: translate(0,0);
        height: 16px;
        width: 16px;
    }

    40% {
        transform: translate(0,-3px);
    }
}

@keyframes wavelastmini {
    0%, 100% {
        transform: translate(0,0);
    }

    15% {
        transform: translate(0,-18px);
        width: 16px;
        height: 16px;
    }

    25% {
        transform: translate(-3px,-6px);
        height: 22px;
        width: 22px;
    }

    30% {
        transform: translate(-1.5px,0);
    }

    40% {
        transform: translate(0,-3px);
        width: 16px;
        height: 16px;
    }

    50% {
        transform: translate(0,0);
        width: 16px;
        height: 16px;
    }
}
